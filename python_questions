# -*- coding: utf-8 -*-
"""python_list.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iH1aRMBQLGNBWelx2-V3D_sOenUZ0E1v
"""

#Sort a list
l = [2,3,5,8,9,10]
# l.sort()
print(sorted(l))

#Create a list, Search for an element, print whether it exists or not(Linear Search)
l = [1,2,3,4,5,6,7,8,9]
d = True
for i in l:
  if i ==3:
    d = False
    break
if d == False:
  print("exists")
else:
  print("not")

#Create a list, print sum of all even numbers & sum of all odd numbers
l = []
for i in range(1,21):
  l.append(i)
print(set(l))
sum = 0
sum2 = 0
for i in l:
  if i%2 ==0:
    sum = sum + i
  if i%2 !=0:
    sum2= sum2 + i
print(sum)
print(sum2)

# Find the occurence of each element in the list.
s = "mynameiseshanandritikajainisstupid"
l = []
for i in s:
  l.append(i)
print(l)
a = set(l)
print(a)
for j in a:
  count = 0
  for k in range(len(l)):
    if j == l[k]:
     count = count + 1
  print(j,":",count)



#Check whether the number is prime or not
l = int(input("enter the number: "))
l2 = []
for i in range(2,l+1):
    l2.append(i)
print(l2)
for i in l2:
    count = 0
    for j in range(len(l2)):
        if i%l2[j] == 0:
            count = count + 1
    if count == 1:
        print(i)

#Remove all duplicate noâ€™s from the list.
l = [5,6,8,9,1,2,3,4,5,6,7,5,6,7]
l2 = []
for i in l:
    count = 0
    for j in range(len(l)):
        if i == l[j]:
            count = count + 1
    if count == 1:
        l2.append(i)
print(l2)l

#Find maximum no from the list without using max function.
l = [1,2,4,37,5,6,46,7,9,11,15]
number = l[0]
for i in l:
  if i > number:
    number = i
print(number)

l = [2,7,11,15]
target = 9
d=True
for i in l:
  for j in range(len(l)):
          if  (i + l[j]) == target and i !=l[j] :
              d=False
              break
print(i,j)

#Find the middle index of an Array.
l = [1,2,3,4,5,7,8]
n = len(l)
if n%2==0:
  x = len(l)//2
  y = len(l)//2 - 1
  print("The middle number is: ",l[y],l[x])
else:
  z = len(l)//2
  print("The middle number is: ",l[z])

#Swap the first & last element of a list.
l = [1,2,3,4,5,6,7,8]
n = l[0]
m = len(l)
k = l[m-  1]
print(n)
print(k)
l[0],l[m-1] = l[m-1],l[0]
print(l)

#Find the majority element in an Array. ForEx: I/P : [1,2,3,1,3,1,5,1] O/P : 1
l = [1,2,3,1,3,1,5,1]
k = set(l)
d = {}
for i in k:
  count = 0
  for j in range(len(l)):
    if i == l[j]:
      count = count + 1
  d[i] = count
Keymax = max(zip(d.values(), d.keys()))[1]
print(Keymax)

k = set(l)

max=0
el=0
for i in k:
  c=0
  for j in range(len(l)):
    if i==l[j]:
      c=c+1
  if c>max:
    max=c
    el=i
print(el)

#Find the sum of every digit in an array.
l = [123,12,13,14]
l1 = []
for i in l:
  sum = 0
  for j in str(i):
    sum = sum + int(j)
  l1.append(sum)
print(l1)

#Find squares of each element of an Array using list comprehension.
l = [1,2,3,4,5,6]
# l2 = []
# for i in l:
#   sq = i*i
#   l2.append(sq)
# print(l2)
#[expression for item in iterable if condition]
li = [i*i for i in l]
print(li)

#Rotate an array for n number of rotations.
l = [1,2,3,4,5]
# n = int(input("enter the roation:"))
# for i in range(n):
#   temp = l[len(l)-1]
#   for j in range(len(l)-1,0,-1):
#     l[j] = l[j-1]
#   l[0] = temp
# print(l)
n = int(input("enter the roation:"))
l2 = l[-n:] + l[:n+1]
print(l2)

#Move zeros if they exist in an array at the end.
l = [1,2,3,0,5,4,0,5,6]
l1 = []
count = 0
for i in l:
  if i == 0:
    count +=1
  else:
    l1.append(i)
print(l1)
for k in range(count):
  l1.append(0)
print(l1)

#Find the strongest neighbor in an array. ForEx: I/P: [1,2,2,3,4,5] O/P: [2,2,3,4,5]
l=[1,2,3,2,4,5,6]
l1=[]
for i in range(len(l)-1):
    for j in range(i+1,i+2):
        if l[i]>l[j]:
            l1.append(l[i])
        else:
            l1.append(l[j])
print(l1)

#Find all possible combinations of 3 elements in an array.
l = [1,2,3]
for i in l:
  for j in range(len(l)):
      print(i,",",l[j])

#Given a list of characters, & take a character as an input from user, replace all characters by * except that input character.
s = ["A","B","C","D","E","F"]
char = input("enter the character that need not to replace: ")
for j in range(len(s)):
    if s[j] !=char:
       s[j] = "*"
print(s)
#
# print(s2)

#Find the sum of unique elements of an Array. For Ex: I/P : [1,2,3,2] O/P : 4
l = [5,6,8,9,1,2,3,4,5,6,7,5,6,7]
l2 = []
for i in l:
  count = 0
  for j in range(len(l)):
    if i == l[j]:
      count = count + 1
  if count == 1:
    l2.append(i)
print(sum(l2))

#Remove the element to make the array strictly increasing. For Ex: I/P : [1,2,3,10,5,8] O/P: True, I/P : [1,1,1] O/P: False.
l=[1,1,1]
# l=[1,1,1]
valid=True
for i in range(len(l)-1):
    for j in range(i+1,i+2):
        if l[i]<l[j]:
            pass
        else:
            valid=False
            break

    break

if(valid==True):
    print("True")
else:
    print("False")

#Sort an array by Increasing Frequency.ForEx: I/P : [2,1,2,1,3,2,] O/P : [3,1,1,2,2,2].
l = [5,5,6,6,6,7]
l2 = set(l)
d = {}
for i in l2:
  count = 0
  for j in range(len(l)):
   if i == l[j]:
     count +=1
     d[i] = count
  # print(i,":",count)
# print(l3)
sorted_values = sorted(d.values()) # Sort the values
print(sorted_values)
sorted_dict = {}

for i in sorted_values:
    for k in d.keys():
        if d[k] == i:
            sorted_dict[k] = d[k]

print(sorted_dict)
l8=[]
count1=0
for k in sorted_dict:
    count1=sorted_dict[k]
    while (count1>0):
        l8.append(k)
        count1=count1-1
print(l8)

# def func(a):
#   return a*a
sq = list(map(lambda x:x*x,[1,2,3,4,5]))
print(sq)
#list(map(func,iterable))

def sq(a):
  return a*a
def cube(a):
  return a*a*a
func = [sq,cube]
for i in range(5):
 n = list(map(lambda x:x(i),func))
 print(n)

li3 = [1,2,3,4,5,6]
def great(a):
  return a>5
l2 = list(filter(great,li3))
print(l2)

s = "mynameiseshanritika"
a = set(s)
for i in a:
  count = 0
  for k in range(len(s)):
    if i == s[k]:
     count +=1
  print(i,",",count)

l = [1,2,3,4,5]
a = set(l)
for i in a:
  count = 0
  for k in range(len(l)):
    if i == l[k]:
      count = count + 1
  print(i,",",count)



st=["N","S","E","E","N","S","W","S"]
st=[]
st.append(l[0])
for i in range(1,len(l)):
    if l[i]=="S":
        if l[i-1]=="N":
            pass
        else:
            st.append(l[i])

    else:
        st.append(l[i])
print(st)

# Sort a list
l = [2,3,2,6,5,4,6,8,9]
l3 = set(l)
l2 = []
for i in set(l):
  l2.append(i)
# print(l2)
l2.sort(reverse=True)
print(l2)

#Find the occurence of each element in the list.
l = [1,2,3,4,5,6,7,8,3,4,5,6,4,5,6,7]
s = set(l)
for i in s:
  count = 0
  for j in range(len(l)):
    if i == l[j]:
      count +=1
  print(i,",",count)

